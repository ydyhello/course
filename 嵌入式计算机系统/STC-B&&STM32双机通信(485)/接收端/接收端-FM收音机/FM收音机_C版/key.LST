C51 COMPILER V9.60.7.0   KEY                                                               12/12/2023 14:51:33 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN key.OBJ
COMPILER INVOKED BY: D:\Keil_v5_2\C51\BIN\C51.EXE key.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "key.h"
   2          
   3          /*
   4           * 函数名：Init_KEY
   5           * 描述  ：初始化P1.7口为ADC
   6           * 输入  ：无
   7           * 输出  ：无
   8           */
   9          void Init_KEY()
  10          {
  11   1        P1ASF = P1_7_ADC;
  12   1        ADC_RES = 0;
  13   1        ADC_CONTR = ADC_POWER | ADC_FLAGE | ADC_START | ADC_SPEEDHH | ADC_CHANNEL;
  14   1        Delay(2);
  15   1      }
  16          
  17          /*
  18           * 函数名：GetADC
  19           * 描述  ：获得AD转换的值
  20           * 输入  ：无
  21           * 输出  ：AD转换的结果
  22          */
  23          unsigned char GetADC()
  24          {
  25   1        unsigned char result;
  26   1        ADC_CONTR = ADC_POWER | ADC_START | ADC_SPEEDHH | ADC_CHANNEL;
  27   1        _nop_();
  28   1        _nop_();
  29   1        _nop_();
  30   1        _nop_();
  31   1        while(!(ADC_CONTR&ADC_FLAGE));
  32   1        ADC_CONTR &= ~ADC_FLAGE;
  33   1        result = ADC_RES;
  34   1        return result;
  35   1      } 
  36          /*导航键扫描函数
  37          *由于导航按键是模拟量按键，因此通过获取各按键的A/D转换值来判断相应的按键按下，然后执行相应的动作
  38          */
  39          void Search_Keyscan()
  40          {
  41   1        unsigned char key,num;
  42   1        key = GetADC();     //获取模拟按键按下的AD值
  43   1        if( (key>=96)&&(key<=127) ) //确定键 AD值111
  44   1        {
  45   2          key = GetADC();
  46   2          if( (key>=96)&&(key<=127) )
  47   2          {
  48   3            while( 1 )
  49   3            {
  50   4              key = GetADC();
  51   4              Frequency_Display();
  52   4              if( key>240 ) 
  53   4                break;
  54   4            }
  55   3          }     
C51 COMPILER V9.60.7.0   KEY                                                               12/12/2023 14:51:33 PAGE 2   

  56   2        }
  57   1        else if( (key>=128)&&(key<=160) )   //左键 AD值148，手动调台，减1
  58   1        {
  59   2          key = GetADC();
  60   2          if( (key>=128)&&(key<=160) )
  61   2          {
  62   3            while(1)
  63   3            {
  64   4              key = GetADC();
  65   4              Frequency_Display();
  66   4              if( key>240 ) 
  67   4                break;
  68   4            }
  69   3            num = -1;
  70   3            Manual_Search( num );
  71   3          }
  72   2        }
  73   1        else if( (key>=32)&&(key<=63) ) //右键  AD值38 手动调台，加1
  74   1        {
  75   2          key = GetADC();
  76   2          if( (key>=32)&&(key<=63) )
  77   2          {
  78   3            while(1)
  79   3            {
  80   4              key = GetADC();
  81   4              Frequency_Display();
  82   4              if( key>240 ) 
  83   4                break;
  84   4            }
  85   3            num = 1;
  86   3            Manual_Search(num);
  87   3          }
  88   2        }
  89   1        else
  90   1          return ;
  91   1      }
  92          /*按键1和按键2扫描函数
  93          *  判断按键1和2是否按下，如果按下则执行相应的动作
  94          */
  95          void KeyScan()
  96          {
  97   1        if( KEY1==0 )     //按键1按下，调小音量
  98   1        {
  99   2          Delayus(50);
 100   2          while( !KEY1 )
 101   2            Frequency_Display();
 102   2          SetVolume(0); 
 103   2        }
 104   1        if( KEY2==0 )   //按键2按下，调大音量
 105   1        {
 106   2          Delayus(50);
 107   2          while( !KEY2 )
 108   2            Frequency_Display();
 109   2          SetVolume(1); 
 110   2        }
 111   1      }
 112          
 113           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    249    ----
C51 COMPILER V9.60.7.0   KEY                                                               12/12/2023 14:51:33 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
