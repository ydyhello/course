C51 COMPILER V9.60.7.0   SEG_LED                                                           10/25/2023 19:58:25 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SEG_LED
OBJECT MODULE PLACED IN .\Objects\seg_led.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\seg_led.c LARGE OMF2 OPTIMIZE(0,SPEED) BROWSE DEBUG PRINT(.\Listings
                    -\seg_led.lst) TABS(2) OBJECT(.\Objects\seg_led.obj)

line level    source

   1          #include "seg_led.h"
   2          
   3          XDATA u8 seg_display_content[8] = {0,0,0,0,0,0,0,0};
   4          XDATA u8 led_display_content = 0;
   5          XDATA u8 seg_led_current = 0;
   6          
   7          CODE u8 seg_decoder[128] ={
   8              0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77,0x7c,0x39,0x5e,0x79,0x71,      //hex 
             -0~F
   9              0, 0, 0, 0, 0, 0, 0, 0,     0, 0, 0, 0, 0, 0, 0, 0,
  10          
  11              0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, //spac
             -e and others
  12              0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f,                                     //numb
             -ers
  13              0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,                                                       //othe
             -rs
  14              0x77,0x7c,0x39,0x5e,0x79,0x71,0x3d,0x76,0x0f,0x0e,0x75,0x38,0x37,0x54,0x5c,0x73,0x67,0x31,0x6d/*s:0x49
             -, 5:0x6d*/,0x78,0x3e,0x1c,0x7e,0x64,0x6e,0x59, //A-Z
  15              0x80, 0x80, 0x80, 0x80, 0x80, 0x80,                                                             //othe
             -rs
  16              0x77,0x7c,0x39,0x5e,0x79,0x71,0x3d,0x76,0x0f,0x0e,0x75,0x38,0x37,0x54,0x5c,0x73,0x67,0x31,0x6d/*s:0x49
             -, 5:0x6d*/,0x78,0x3e,0x1c,0x7e,0x64,0x6e,0x59, //a-z
  17              0x80, 0x80, 0x80, 0x80, 0x80                                                                    //othe
             -rs
  18          };
  19          
  20          void seg_set_str(char* str) large reentrant
  21          {
  22   1        seg_display_content[0] = seg_decoder[str[0]];
  23   1        seg_display_content[1] = seg_decoder[str[1]];
  24   1        seg_display_content[2] = seg_decoder[str[2]];
  25   1        seg_display_content[3] = seg_decoder[str[3]];
  26   1        seg_display_content[4] = seg_decoder[str[4]];
  27   1        seg_display_content[5] = seg_decoder[str[5]];
  28   1        seg_display_content[6] = seg_decoder[str[6]];
  29   1        seg_display_content[7] = seg_decoder[str[7]];
  30   1      }
  31          
  32          void seg_set_number(u32 n) large reentrant
  33          {
  34   1          seg_display_content[7] = seg_decoder[n%10]; n/=10;
  35   1          seg_display_content[6] = seg_decoder[n%10]; n/=10;
  36   1          seg_display_content[5] = seg_decoder[n%10]; n/=10;
  37   1          seg_display_content[4] = seg_decoder[n%10]; n/=10;
  38   1          seg_display_content[3] = seg_decoder[n%10]; n/=10;
  39   1          seg_display_content[2] = seg_decoder[n%10]; n/=10;
  40   1          seg_display_content[1] = seg_decoder[n%10]; n/=10;
  41   1          seg_display_content[0] = seg_decoder[n%10]; n/=10;
  42   1      }
  43          
  44          //this function should be called in system timer ISR
  45          //no reentrancy is supported
  46          void seg_led_scan_next()
C51 COMPILER V9.60.7.0   SEG_LED                                                           10/25/2023 19:58:25 PAGE 2   

  47          {
  48   1          switch(seg_led_current)
  49   1          {
  50   2              case 0: DISP_SEG(0)     seg_led_current++; break;
  51   2              case 1: DISP_SEG(1)     seg_led_current++; break;
  52   2              case 2: DISP_SEG(2)     seg_led_current++; break;
  53   2              case 3: DISP_SEG(3)     seg_led_current++; break;
  54   2              case 4: DISP_SEG(4)     seg_led_current++; break;
  55   2              case 5: DISP_SEG(5)     seg_led_current++; break;
  56   2              case 6: DISP_SEG(6)     seg_led_current++; break;
  57   2              case 7: DISP_SEG(7)     seg_led_current++; break;
  58   2              case 8: DISP_LED()      seg_led_current=0; break;
  59   2          default: seg_led_current = 0;
  60   2          }
  61   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1363    ----
   CONSTANT SIZE    =    128    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
